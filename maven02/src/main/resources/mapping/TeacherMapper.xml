<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.javen.dao.TeacherDao" >

    <!--    一对多查询：找到每个老师的学生-->

    <!--    注意老师实体类当中要有学生类的对象的集合才能实现关联查询-->

    <!--按照结果进行查询-->
    <select id="getTeacher" resultMap="TeacherStudent">
        SELECT  teacher.id,teacher.teacherName,student.studentName FROM teacher
            LEFT JOIN student  on student.t_id = teacher.id
     </select>
    <resultMap id="TeacherStudent" type="com.javen.model.Teacher">
        <result property="id" column="id"/>
        <result property="teacherName" column="teacherName"/>
        <!-- 复杂的属性我么需要单独去处理 对象:association   集合：collection
          在集合中的泛型信息，我们使用ofType获取
          -->
        <collection property="students" ofType="com.javen.model.Student">
            <result property="studentName" column="studentName"/>
        </collection>
    </resultMap>

    <!--按照查询嵌套处理-->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from teacher
    </select>
    <resultMap id="TeacherStudent2" type="com.javen.model.Teacher">
        <collection property="students" column="id" javaType="ArrayList"
                    ofType="com.javen.model.Student" select="getStudentByTeacherId" />
    </resultMap>
    <select id="getStudentByTeacherId" resultType="com.javen.model.Student">
        select * from student where t_id = #{t_id}
    </select>

</mapper>